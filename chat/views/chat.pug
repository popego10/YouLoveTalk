extends layout

block content
  div(style='position:relative;margin:30px;color:#282c37')
    h1= title
    a#exit-btn(href='?nickname=${req.session.nickname}' style='position:absolute;top:0;right:0;')
      i.fas.fa-running(aria-hidden='true' style='font-size:50px;color:#282c37;')
    div(style='position:absolute;top:0px;right:60px;') 참여인원
      #number-count= number
  div(style='margin:10px 30px 30px 30px; border: 3px solid #cbcbcb; padding:30px;')
    fieldset
      #chat-list(style='overflow: auto')
        for chat in chats
          if chat.user === user
            .mine
              div= chat.user
              if chat.gif
                img(src='/gif/' + chat.gif)
              else
                div= chat.chat
          else if chat.user === 'system'
            .system
              div= chat.chat
          else
            //.other(style='color:' + chat.user)
            .other
              div= chat.user
              if chat.gif
                img(src='/gif/' + chat.gif)
              else
                div= chat.chat
  div(style='margin-right:30px;')
    form#chat-form(action='/chat' method='post' enctype='multipart/form-data')
      div
        //- label(for="vote" name='vote')
        //-   i.fas.fa-poll#editModal(aria-hidden='true' style='font-size:30px;color:#282c37;margin-right:15px;' target='#editModal')
            
        //- label(for='file')
        //-   i.fa.fa-file(aria-hidden='true' style='font-size:30px;color:#282c37;margin-right:10px;')
          //- input#file(type='file' name='fileBackUp' accept='txt' onClick='fileBackUp();')
        label(for='gif')
          i.fa.fa-image(aria-hidden='true' style='font-size:30px;color:#282c37;')
          input#gif(type='file' name='gif' accept='image/gif')
      input#chat(name='chat' autofocus='')
      button(type='submit') 전송
  script(src='/socket.io/socket.io.js')
  script.
    var socket = io.connect('http://192.168.0.13:8005/chat', {
      path: '/socket.io'
    });
    socket.on('join', function (data) {
      document.getElementById("number-count").innerText = data.number;//==>입장시 변경
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });
    socket.on('exit', function (data) {
      document.getElementById("number-count").innerText = data.number;//==>퇴장시 변경
      var div = document.createElement('div');
      div.classList.add('system');
      var chat = document.createElement('div');
      div.textContent = data.chat;
      div.appendChild(chat);
      document.querySelector('#chat-list').appendChild(div);
    });
    socket.on('chat', function (data) {
      var div = document.createElement('div');
      if (data.user === '#{user}') {
        div.classList.add('mine');
      } else {
        div.classList.add('other');
      }
      //profile 이미지 출력
      //- var profile = document.createElement('img');
      //- profile.img = data.profile;
      //- img.appendChild(profile);
           
      //이름
      var name = document.createElement('div');
      name.textContent = data.user;
      div.appendChild(name);
      
      //채팅내용
      if (data.chat) {
        var chat = document.createElement('div');
        chat.textContent = data.chat;
        div.appendChild(chat);
      } else {
        var gif = document.createElement('img');
        gif.src = '/gif/' + data.gif;
        div.appendChild(gif);
      }
      //메시지 전송 시간 출력
      var time = document.createElement('div');
      time.textContent = new Date().toLocaleTimeString();
      div.appendChild(time);

      //user에 색 주기
      div.style.color = data.user;
      document.querySelector('#chat-list').appendChild(div);
      
      //채팅 내용 append이후 스크롤 최하단으로 이동(채팅 입력시 마다==>이미지는 안먹으니까 그냥 채팅 입력시에만 최하단 고정)
      var scroll = document.getElementById("chat-list");
      scroll.scrollTop = scroll.scrollHeight;

    });
    //채팅 전송 이벤트 리스너
    document.querySelector('#chat-form').addEventListener('submit', function (e) {
      e.preventDefault();
      if (e.target.chat.value) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
          if (xhr.status === 200) {
            e.target.chat.value = '';
          } else {
            console.error(xhr.responseText);
          }
        };
        xhr.open('POST', '/room/#{room._id}/chat');
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({ chat: this.chat.value }));
      }
    });
    //채팅 이미지 전송 이벤트 리스너 추가
    document.querySelector('#gif').addEventListener('change', function (e) {
      var formData = new FormData();
      var xhr = new XMLHttpRequest();
      console.log(e.target.files);
      formData.append('gif', e.target.files[0]);
      xhr.onload = function(){
        if(xhr.status === 200){
          e.target.file = null;
        }else{
          console.error(xhr.responseText);
        }
      };
      xhr.open('POST', '/room/#{room._id}/gif');
      xhr.send(formData);
    });

    //채팅 백업 리스너 추가
    //- document.querySelector('#chat').addEventListener('backup', function(e){
    //-   var blob = new Blob([content], { 
    //-     type: 'text/plain;charset=utf-8' 
    //-   });
    //-   var URL = URL.createObjectURL(blob);
    //-   var a = document.createElement('a');
 
    //-   a.download = fileName;
    //-   a.href = objURL;
    //-   a.click();
    //- });

    //- function fileBackUp(){
    //-   var backupChat = document.querySelector('#chat').value;
    //-   var blob = new Blob([content], { 
    //-     type: 'text/plain;charset=utf-8' 
    //-   });
    //-   var URL = URL.createObjectURL(blob);
    //-   var a = document.createElement('a');
    //-   a.href = url; 
    //-   a.download = "파일명.txt"; 
    //-   a.click(); 
    //-   URL.revokeObjectURL(url); 
    //- }

    //- fs.writeFile('파일경로/파일명','파일에들어갈내용',function(err){ 
    //-   if (err === null) { 
    //-     console.log('success'); 
    //-   } else { 
    //-     console.log('fail');
    //-   }
    //- });
    
    //채팅 투표 등록 리스너 추가
    //- document.querySelector([name='vote']).addEventListener('vote', function (e) {
    //-   callmodal();
    //- }

    //- $(function callmodal(){
    //-   #editModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    //-   .modal-dialog
    //-     .modal-content
    //-       .modal-header
    //-         button.close(type="button", data-dismiss="modal")
    //-           span(aria-hidden="true") ×
    //-           span.sr-only Close
    //-         h4#myModalLabel.modal-title
    //-           | Edit Resource
    //-       .modal-body
    //-         //#editForm.form(role='form' method='GET' action='https://www.google.com/')
    //-         form(role='form' method='GET' action='https://www.google.com/')
    //-           div.form-group
    //-             label(for='name') Name:
    //-             input#name.form-control(type='text', placeholder='name' name='name')
    //-           div.form-group
    //-             label(for='email') Email:
    //-             input#email.form-control(type='email', placeholder='name@email.com' name='email')
    //-           button.btn.btn-primary(type="submit", name="asdf") Submit
    //-           button.btn.btn-default(type="button", data-dismiss="modal")
    //-             | Close
    //- });
    